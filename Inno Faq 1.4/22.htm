<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>Слайд-шоу в окне инсталляции</title><link rel="stylesheet" type="text/css" href="css.css"><script type="text/javascript" src="includer.js"></script><script language='jscript' type='text/javascript' src='copycode.js'></script></head><body><div id="heading"><h1>» Inno Setup Faq. Слайд-шоу в окне инсталляции</h1></div><br><script language="javascript" type="text/javascript">includeSyntax('delphi');</script><code id="delphi_Tc4NTM"> <input type="button" value="Копировать в буфер обмена" onClick="copyToClipboard( taCode1, theCode1 );"> <blockquote id="theCode1"><font>#define TIME_FOR_VIEW 10<br><br>[Setup]<br>AppName=My Program<br>AppVerName=My Program v 1.5<br>DefaultDirName={pf}\My Program<br><br>[Languages]<br>Name: russian; MessagesFile: compiler:Languages\Russian.isl<br><br>[Files]<br>Source: InnoCallback.dll; Flags: dontcopy noencryption nocompression solidbreak;<br>Source: .bmp; Flags: dontcopy noencryption nocompression solidbreak;<br><br>Source: D:\Games\StarCraft enGB\StarDat.mpq; DestDir: {app}<br><br>[Code]<br>const<br>n=21; ///количество слайдов<br>type<br>TProc = procedure(HandleW, msg, idEvent, TimeSys: LongWord);<br>TRandNumbers = array[1..N] of byte;<br><br>function WrapTimerProc(callback:TProc; paramcount:integer):longword;<br>external 'wrapcallback@files:InnoCallback.dll stdcall';<br><br>function SetTimer(hWnd: LongWord; nIDEvent, uElapse: LongWord; lpTimerFunc: LongWord): LongWord;<br>external 'SetTimer@user32.dll stdcall';<br><br>function KillTimer(hWnd: LongWord; nIDEvent: LongWord): LongWord;<br>external 'KillTimer@user32.dll stdcall';<br><br>function get_unique_r andom_number(X:byte):TRandNumbers;<br>var<br>A,b,c: string;<br>i,j,k:byte;<br>begin<br>For i:=1 to X do A:=A+chr(i);<br>B:='';<br>For i:=1 to X do begin<br>&nbsp; j:=Random(Length(A)-1)+1;<br>&nbsp; C:='';<br>&nbsp; B:=B + A[j];<br>&nbsp; for k:=1 to Length(A) do<br>&nbsp; if k&lt;&gt;j then C:=C+A[k];<br>&nbsp; A:=C;<br>end;<br>for i:=1 to X do Result[i]:=ord(B[i]);<br>end;<br><br>var<br>TimerID: LongWord;<br>currTime: Integer;<br>SplashImage: TBitmapImage;<br>StatusMessages: TNewStaticText;<br>bmp: TRandNumbers;<br>z:byte;<br><br>procedure OnTimer(HandleW, msg, idEvent, TimeSys: LongWord);<br>begin<br>currTime := currTime + 1;<br>if (currTime mod {#TIME_FOR_VIEW} = 0)<br>then begin<br>&nbsp; SplashImage.Bitmap.LoadFromFile(ExpandConstant('{tmp}\Image_'+ inttostr(bmp[currTime/{#TIME_FOR_VIEW}])+'.bmp'));<br>&nbsp; if (currTime/{#TIME_FOR_VIEW} = N) then currTime:=0;<br>end;<br>end;<br><br>procedure InitializeWizard;<br>begin<br>bmp:=get_unique_random_number(N);<br>ExtractTemporaryFile('Image_'+inttostr(bmp[1])+'.bmp');<br><br>currTime := 0;<br><br>WizardForm.ProgressGauge.Parent := WizardForm;<br>WizardForm.ProgressGauge.Top := WizardForm.CancelButton.Top + ScaleY (12);<br>WizardForm.ProgressGauge.Left := ScaleX(10);<br>WizardForm.ProgressGauge.Width := WizardForm.MainPanel.Width - ScaleX(20);<br>WizardForm.ProgressGauge.Height := 16;<br>WizardForm.ProgressGauge.Hide;<br><br>WizardForm.StatusLabel.Parent := WizardForm;<br>WizardForm.StatusLabel.Top := WizardForm.ProgressGauge.Top - ScaleY(18);<br>WizardForm.StatusLabel.Left := ScaleX(10);<br>WizardForm.StatusLabel.Width := ScaleX(397);<br>WizardForm.StatusLabel.Hide;<br><br>SplashImage := TBitmapImage.Create(WizardForm);<br>SplashImage.Top := 0;<br>SplashImage.Left := 0;<br>SplashImage.Width := WizardForm.MainPanel.Width;<br>SplashImage.Height := WizardForm.Bevel.Top;<br>SplashImage.Parent := WizardForm.InnerPage;<br>SplashImage.Stretch := True;<br>SplashImage.Bitmap.LoadFromFile(ExpandConstant('{tmp}\Image_'+inttostr(bmp[1])+'.bmp'));<br>SplashImage.Hide;<br>end;<br><br>procedure CurStepChanged(CurStep: TSetupStep);<br>begin<br>if CurStep = ssInstall then<br>begin<br>WizardForm.StatusLabel.Caption := 'Распаковка слайдов ...';<br>for z:=2 to N do ExtractTemporaryFile('Image_ '+inttostr(bmp[z])+'.bmp');<br>end;<br>end;<br><br>procedure CurPageChanged(CurPageID: Integer);<br>var<br>pfunc: LongWord;<br>begin<br>if (CurPageID = wpInstalling) then<br>begin<br>pfunc := WrapTimerProc(@OnTimer, 5);<br>TimerID := SetTimer(0, 0, 1000, pfunc);<br>WizardForm.PageNameLabel.Visible := False;<br>WizardForm.PageNameLabel.Visible := False;<br>WizardForm.InnerNotebook.Hide;<br>WizardForm.Bevel1.Hide;<br>WizardForm.MainPanel.Hide;<br>WizardForm.PageNameLabel.Hide;<br>WizardForm.PageNameLabel.Hide;<br>WizardForm.ProgressGauge.Show;<br>WizardForm.StatusLabel.Show;<br>SplashImage.Show;<br>WizardForm.CancelButton.Enabled := True;<br>WizardForm.CancelButton.Top := WizardForm&lt; /FONT&gt; .Bevel.Top + ScaleY(100);<br>end else<br>begin<br>WizardForm.ProgressGauge.Hide;<br>SplashImage.Hide;<br>WizardForm.FileNameLabel.Hide;<br>WizardForm.StatusLabel.Hide;<br>if (CurPageID &gt; wpInstalling) and (CurPageID &lt; wpFinished) then<br>begin<br>WizardForm.InnerNotebook.Show;<br>WizardForm.Bevel1.Show;<br>WizardForm.MainPanel.Show;<br>WizardForm.PageNameLabel.Show;<br>WizardForm.PageNameLabel.Show;<br>end;<br>If CurPageID = wpFinished then<br>end;<br>end;<br><br>procedure DeInitializeSetup();<br>begin<br>KillTimer(0, TimerID);<br>end;</font></blockquote><textarea id="taCode1" style="display:none;" rows="1" cols="5"></textarea><textarea id='taCode' style='display:none;' rows='1' cols='20'></textarea></code><script language="javascript" type="text/javascript">highlightSyntax('delphi_Tc4NTM','delphi');</script><br><div id="heading"><h1><font size="1" face="Consolas">Copyright (c) <a href="http://www.krinkels.org/" target="_blank">Krinkels Inc</a></font></h1></div></body></html>