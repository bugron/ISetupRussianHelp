<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Объем извлеченных файлов</title><link rel="stylesheet" type="text/css" href="css.css"><script type="text/javascript" src="includer.js"></script><script language='jscript' type='text/javascript' src='copycode.js'></script></head><body><div id="heading"><h1>» Inno Setup Faq. Объем извлеченных файлов</h1></div><br><script language="javascript" type="text/javascript">includeSyntax('delphi');</script><code id="delphi_Tc4NTM">
<input type="button" value="Копировать в буфер обмена" onClick="copyToClipboard( taCode1, theCode1 );">
<blockquote id="theCode1"><font>[Setup]<br>AppName=MyProg<br>AppVerName=MyProg<br>OutputDir=D:\Репаки\MyProg<br>DefaultDirName={pf}\MyProg<br><br>[Files]<br>Source: compiler:innocallback.dll; Flags: dontcopy<br>Source: D:\Program\*; DestDir: {app}; Flags: ignoreversion recursesubdirs createallsubdirs<br><br>[Code]<br>const<br>oneMB=1024*1024;<br><br>type<br>TTimerProc = procedure(HandleW, Msg, idEvent, TimeSys: LongWord);<br><br>var<br>FullSize: Extended;<br>TimerID: LongWord;<br><br>function WrapTimerProc(callback: TTimerProc; Paramcount: Integer): longword; external 'wrapcallback@files:innocallback.dll stdcall';<br>function SetTimer(hWnd, nIDEvent, uElapse, lpTimerFunc: LongWord): longword; external 'SetTimer@user32';<br>function KillTimer(hWnd, nIDEvent: LongWord): LongWord; external 'KillTimer@user32 stdcall delayload';<br><br>function NumToStr(Float: Extended): String;<br>Begin<br>Result:= Format('%.2n', [Float]); StringChange(Result, ',', '.');<br>while ((Result[Length(Result)] = '0') or (Result[Length(Result)] = '.')) and (Pos('.', Result) &gt; 0) do<br>SetLength(Result, Length(Result)-1);<br>end;<br><br>function Size64(Hi, Lo: Integer): Extended;<br>Begin<br>Result:= Lo; if Lo&lt; 0 then Result:= Result + $7FFFFFFF + $7FFFFFFF + 2; for Hi:= Hi-1 Downto 0 do Result:= Result + $7FFFFFFF + $7FFFFFFF + 2;<br>end;<br><br>function ByteOrTB(Bytes: Extended; noMB: Boolean): String; {{Перевод числа в значение бт/Кб/Мб/Гб/Тб (до 2х знаков после запятой)}<br>Begin<br>if not noMB then Result:= NumToStr(Int(Bytes)) +' Mb' else<br>if Bytes &lt; 1024 then if Bytes = 0 then Result:= '0' else Result:= NumToStr(Int(Bytes)) +' Bt' else<br>if Bytes/1024 &lt; 1024 then Result:= NumToStr(round((Bytes/1024)*10)/10) +' Kb' else<br>If Bytes/oneMB &lt; 1024 then Result:= NumToStr(round(Bytes/oneMB*100)/100) +' Mb' else<br>If Bytes/oneMB/1000 &lt; 1024 then Result:= NumToStr(round(Bytes/oneMB/1024*1000)/1000) +' Gb' else<br>Result:= NumToStr(round(Bytes/oneMB/oneMB*1000)/1000) +' Tb';<br>end;<br><br>function CalcDirSize(const fromDir, fileMask: string; SubDirsAllow: Boolean): Extended;<br>var<br>FSR, DSR: TFindRec; FindResult: Boolean; APath: string;<br>Begin<br>APath:= AddBackslash(fromDir);<br>FindResult:= FindFirst(APath + fileMask, FSR);<br>Try<br>while FindResult do<br>begin<br>if FSR.Attributes and FILE_ATTRIBUTE_DIRECTORY = 0 then Result:= Result + Size64(FSR.SizeHigh, FSR.SizeLow)<br>FindResult:= FindNext(FSR);<br>end;<br>FindResult := FindFirst(APath + '*.*', DSR);<br>while FindResult and SubDirsAllow do<br>begin<br>if ((DSR.Attributes and FILE_ATTRIBUTE_DIRECTORY) = FILE_ATTRIBUTE_DIRECTORY) and not ((DSR.Name = '.') or (DSR.Name = '..')) then<br>{{Recursion} Result:= Result + CalcDirSize(APath + DSR.Name, fileMask, SubDirsAllow);<br>///если есть хоть одна рекурсия, то подсчет почему-то не прерывается<br>FindResult:= FindNext(DSR);<br>end;<br>Finally<br>FindClose(FSR); FindClose(DSR);<br>end;<br>end;<br><br>procedure GetExtractSize();<br>begin<br>///Так как ClcDirSize суммирует полученные размеры, то сначала обнуляем счетчик<br>FullSize:=0;<br>FullSize:=CalcDirSize(ExpandConstant('{app}'), '*', true)<br>WizardForm.StatusLabel.Caption:= 'Общий объем извлеченных файлов ' + ByteOrTB(FullSize, true)<br>end;<br><br>procedure MyTimerProc(h, msg, idevent, dwTime: Longword);<br>Begin<br>if WizardForm.CurPageID = wpInstalling then GetExtractSize();<br>end;<br><br>procedure DeinitializeSetup();<br>begin<br>KillTimer(0, TimerID);<br>end;<br><br>procedure CurStepChanged(CurStep: TSetupStep);<br>begin<br>if CurStep = ssInstall then<br>begin<br>TimerID:= SetTimer(0, 0, 500 {{полсекунды}, WrapTimerProc(@MyTimerProc, 4));<br>end;<br>end;</font></blockquote><textarea id="taCode1" style="display:none;" rows="1" cols="5"></textarea><textarea id='taCode' style='display:none;' rows='1' cols='20'></textarea></code><script language="javascript" type="text/javascript">highlightSyntax('delphi_Tc4NTM','delphi');</script><br><div id="heading"><h1><font size="1" face="Consolas">Copyright (c) <a href="http://www.krinkels.org/" target="_blank">Krinkels Inc</a></font></h1></div></body></html>