<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251" />
<meta http-equiv="X-UA-Compatible" content="IE=8" />
<title>Pascal Scripting: Exec</title>
<link rel="stylesheet" type="text/css" href="../styles.css" />
<script type="text/javascript" src="../topic.js"></script>
</head>
<body>
<h1 class="topicheading">Pascal Scripting: Exec</h1>
<div class="topicbody">
  <div><b>Прототип:</b></div>
  <p><tt>function Exec(const Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ResultCode: Integer): Boolean;</tt></p>
  <div><b>Описание:</b></div>
  <p>Выполняет указанный исполняемый или пакетный файл с привилегиями инсталлятора/деинсталлятора. Параметр Wait определяет, закончить работу функции сразу или ждать, пока запущенный процесс завершится или станет неактивен. Возвращает True, если указанный файл был выполнен успешно, иначе False. Если функция возвратит True и Wait имеет значение ewWaitUntilTerminated, тогда ResultCode содержит код выхода запущенного процесса. Если функция возвратит False, тогда ResultCode содержит код ошибки. Чтобы получить описание ошибки, используйте SysErrorMessage(ResultCode).</p>
  <div><b>Комментарии:</b></div>
  <p>TExecWait определен как:</p>
  <p><tt>TExecWait = (ewNoWait, ewWaitUntilTerminated, ewWaitUntilIdle);</tt></p>
  <p>Используйте функцию <a href="topic_isxfunc_shellexec.htm">ShellExec</a>, если запускаемый файл не является исполняемым или пакетным файлом.</p>
  <p>Не используйте кавычки в параметре Filename, функция добавит их автоматически.</p>
  <p>Параметр WorkingDir может быть пустой строкой и в этом случае функция попытается извлечь путь из параметра Filename и использовать как первоначальный текущий каталог для процесса. Если этого не удастся сделать, будет использован каталог по умолчанию.</p>
  <p>Если вы имеете строку, содержащую имя файла и параметры запуска (например, эти параметры можно получить из значения реестра UninstallString), вам нужно отделить параметры самостоятельно; просто передайте <tt>'&gt;'</tt> в параметре Filename и ключи запуска в параметре Params. (Следует отметить, что в этом случае, специальная платформо-независимая  поддержка .bat и .cmd файлов отключается и функция просто передает параметры запуска в функцию CreateProcess без дальнейшей обработки.)</p>
  <p>По умолчанию, инсталлятор/деинсталлятор выполняется в <a href="../topic_32vs64bitinstalls.htm">64-разрядном режиме</a>, функйия отключают перенаправление файловой системы WOW64 при вызове функции CreateProcess. Можно изменить это поведение с помощью функцию <a href="topic_isxfunc_enablefsredirection.htm">EnableFsRedirection</a>.</p>
  <div><b>Например:</b></div>
  <pre>var
  ResultCode: Integer;
begin
  // Launch Notepad and wait for it to terminate
  if Exec(ExpandConstant('{win}\notepad.exe'), '', '', SW_SHOW,
     ewWaitUntilTerminated, ResultCode) then
  begin
    // handle success if necessary; ResultCode contains the exit code
  end
  else begin
    // handle failure if necessary; ResultCode contains the error code
  end;
end;</pre>
  <div><b>См. также:</b></div>
  <p><a href="topic_isxfunc_execasoriginaluser.htm">ExecAsOriginalUser</a></p>
</div>
</body>
</html>