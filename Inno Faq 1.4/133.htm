<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1251"><title>Установка программы в корне выбранного диска</title><link rel="stylesheet" type="text/css" href="css.css">
<script language='jscript' type='text/javascript' src='copycode.js'></script>
<script type="text/javascript" src="includer.js"></script></head><body><div id="heading"><h1>» Inno Setup Faq. Установка программы в корне выбранного диска</h1></div><br>
<script language="javascript" type="text/javascript">includeSyntax('delphi');</script><code id="delphi_Tc4NTM">
<input type="button" value="Копировать в буфер обмена" onClick="copyToClipboard( taCode1, theCode1 );">
<blockquote id="theCode1"><font>
[Setup]<br>
AppName=AskDrive<br>
AppVerName=AskDrive<br>
DefaultDirName={sd}\My&nbsp;Program<br>
Compression=lzma2<br>
<br>
[Files]<br>
;;test&nbsp;file<br>
Source:&nbsp;RP4801_manual.pdf;&nbsp;DestDir:&nbsp;{app}&nbsp;;&nbsp;AfterInstall:&nbsp;MyAfterInstall2('{app}\B\MYFILE.TXT')<br>
<br>
<br>
[Messages]<br>
SelectDirBrowseLabel=To&nbsp;continue,&nbsp;click&nbsp;Next.&nbsp;If&nbsp;you&nbsp;would&nbsp;like&nbsp;to&nbsp;select&nbsp;a&nbsp;different&nbsp;drive,&nbsp;choose&nbsp;from&nbsp;the&nbsp;list.<br>
<br>
[Code]<br>
var<br>
///combo&nbsp;box&nbsp;for&nbsp;drives<br>
cbDrive&nbsp;:&nbsp;TComboBox&nbsp;;<br>
///array&nbsp;of&nbsp;strings&nbsp;that&nbsp;stores&nbsp;the&nbsp;drive&nbsp;letters<br>
DrvLetters:&nbsp;array&nbsp;of&nbsp;String;<br>
<br>
function&nbsp;GetDriveType(lpDisk:&nbsp;String):&nbsp;Integer;<br>
external&nbsp;'GetDriveTypeA@kernel32.dll&nbsp;stdcall';<br>
<br>
function&nbsp;GetLogicalDriveStrings(nLenDrives:&nbsp;LongInt;&nbsp;lpDrives:&nbsp;String):&nbsp;Integer;<br>
external&nbsp;'GetLogicalDriveStringsA@kernel32.dll&nbsp;stdcall';<br>
<br>
const<br>
&nbsp;&nbsp;DRIVE_UNKNOWN&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///The&nbsp;drive&nbsp;type&nbsp;cannot&nbsp;be&nbsp;determined.<br>
&nbsp;&nbsp;DRIVE_NO_ROOT_DIR&nbsp;=&nbsp;1;&nbsp;///The&nbsp;root&nbsp;path&nbsp;is&nbsp;invalid.&nbsp;For&nbsp;example,&nbsp;no&nbsp;volume&nbsp;is&nbsp;mounted&nbsp;at&nbsp;the&nbsp;path.<br>
&nbsp;&nbsp;DRIVE_REMOVABLE&nbsp;=&nbsp;2;&nbsp;&nbsp;&nbsp;///The&nbsp;disk&nbsp;can&nbsp;be&nbsp;removed&nbsp;from&nbsp;the&nbsp;drive.<br>
&nbsp;&nbsp;DRIVE_FIXED&nbsp;=&nbsp;3;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///The&nbsp;disk&nbsp;cannot&nbsp;be&nbsp;removed&nbsp;from&nbsp;the&nbsp;drive.<br>
&nbsp;&nbsp;DRIVE_REMOTE&nbsp;=&nbsp;4;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///The&nbsp;drive&nbsp;is&nbsp;a&nbsp;remote&nbsp;(network)&nbsp;drive.<br>
&nbsp;&nbsp;DRIVE_CDROM&nbsp;=&nbsp;5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///The&nbsp;drive&nbsp;is&nbsp;a&nbsp;CD-ROM&nbsp;drive.<br>
&nbsp;&nbsp;DRIVE_RAMDISK&nbsp;=&nbsp;6;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///The&nbsp;drive&nbsp;is&nbsp;a&nbsp;RAM&nbsp;disk.<br>
<br>
<br>
///function&nbsp;to&nbsp;convert&nbsp;disk&nbsp;type&nbsp;to&nbsp;a&nbsp;regonizable&nbsp;string.&nbsp;This&nbsp;piece&nbsp;needs&nbsp;translation<br>
///to&nbsp;other&nbsp;languages<br>
function&nbsp;DriveTypeString(dtype:&nbsp;Integer):&nbsp;String&nbsp;;<br>
begin<br>
&nbsp;&nbsp;case&nbsp;dtype&nbsp;of<br>
&nbsp;&nbsp;&nbsp;&nbsp;DRIVE_NO_ROOT_DIR&nbsp;:&nbsp;Result&nbsp;:=&nbsp;'Root&nbsp;path&nbsp;invalid';<br>
&nbsp;&nbsp;&nbsp;&nbsp;DRIVE_REMOVABLE&nbsp;:&nbsp;Result&nbsp;:=&nbsp;'Removable';<br>
&nbsp;&nbsp;&nbsp;&nbsp;DRIVE_FIXED&nbsp;:&nbsp;Result&nbsp;:=&nbsp;'Fixed';<br>
&nbsp;&nbsp;&nbsp;&nbsp;DRIVE_REMOTE&nbsp;:&nbsp;Result&nbsp;:=&nbsp;'Network';<br>
&nbsp;&nbsp;&nbsp;&nbsp;DRIVE_CDROM&nbsp;:&nbsp;Result&nbsp;:=&nbsp;'CD-ROM';<br>
&nbsp;&nbsp;&nbsp;&nbsp;DRIVE_RAMDISK&nbsp;:&nbsp;Result&nbsp;:=&nbsp;'Ram&nbsp;disk';<br>
&nbsp;&nbsp;else<br>
&nbsp;&nbsp;&nbsp;&nbsp;Result&nbsp;:=&nbsp;'Unknown';<br>
&nbsp;&nbsp;end;<br>
end;<br>
<br>
///change&nbsp;folder&nbsp;accordigly&nbsp;to&nbsp;the&nbsp;drive&nbsp;letter&nbsp;selected<br>
procedure&nbsp;cbDriveOnClick(Sender:&nbsp;TObject);<br>
begin<br>
WizardForm.DirEdit.Text&nbsp;:=&nbsp;DrvLetters[&nbsp;cbDrive.ItemIndex&nbsp;]&nbsp;+&nbsp;'My&nbsp;program';<br>
end;<br>
<br>
procedure&nbsp;FillCombo();<br>
var<br>
&nbsp;&nbsp;n:&nbsp;Integer;<br>
&nbsp;&nbsp;drivesletters:&nbsp;String;&nbsp;lenletters:&nbsp;Integer;<br>
&nbsp;&nbsp;drive:&nbsp;String;<br>
&nbsp;&nbsp;disktype,&nbsp;posnull:&nbsp;Integer;<br>
&nbsp;&nbsp;sd:&nbsp;String;<br>
<br>
begin<br>
&nbsp;&nbsp;///get&nbsp;the&nbsp;system&nbsp;drive<br>
&nbsp;&nbsp;sd&nbsp;:=&nbsp;UpperCase(ExpandConstant('{sd}'));<br>
<br>
&nbsp;&nbsp;///get&nbsp;all&nbsp;drive&nbsp;letters&nbsp;of&nbsp;the&nbsp;system<br>
&nbsp;&nbsp;drivesletters&nbsp;:=&nbsp;StringOfChar('&nbsp;',&nbsp;64);<br>
&nbsp;&nbsp;lenletters&nbsp;:=&nbsp;GetLogicalDriveStrings(63,&nbsp;drivesletters);<br>
&nbsp;&nbsp;SetLength(drivesletters&nbsp;,&nbsp;lenletters);<br>
<br>
&nbsp;&nbsp;drive&nbsp;:=&nbsp;'';<br>
&nbsp;&nbsp;n&nbsp;:=&nbsp;0;<br>
&nbsp;&nbsp;while&nbsp;((Length(drivesletters)&nbsp;&gt;&nbsp;0))&nbsp;do<br>
&nbsp;&nbsp;begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;posnull&nbsp;:=&nbsp;Pos(#0,&nbsp;drivesletters);<br>
&nbsp;&nbsp;	if&nbsp;posnull&nbsp;&gt;&nbsp;0&nbsp;then<br>
&nbsp;&nbsp;	begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drive:=&nbsp;UpperCase(Copy(drivesletters,&nbsp;1,&nbsp;posnull&nbsp;-&nbsp;1));<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///get&nbsp;number&nbsp;type&nbsp;of&nbsp;disk<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disktype&nbsp;:=&nbsp;GetDriveType(drive);<br>
<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///you&nbsp;can&nbsp;add&nbsp;various&nbsp;types&nbsp;of&nbsp;checks&nbsp;here&nbsp;to&nbsp;limit&nbsp;the&nbsp;types&nbsp;of&nbsp;drives&nbsp;that<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///are&nbsp;displayed&nbsp;to&nbsp;the&nbsp;user.&nbsp;in&nbsp;this&nbsp;example&nbsp;we&nbsp;add&nbsp;a&nbsp;drive&nbsp;only&nbsp;if&nbsp;is&nbsp;not&nbsp;a<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///removable&nbsp;drive&nbsp;(ie&nbsp;floppy,&nbsp;USB&nbsp;key,&nbsp;etc).&nbsp;you&nbsp;may&nbsp;add&nbsp;whatever&nbsp;limitations<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///you&nbsp;need&nbsp;in&nbsp;the&nbsp;next&nbsp;IF&nbsp;statement<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(not&nbsp;(disktype&nbsp;=&nbsp;DRIVE_REMOVABLE))&nbsp;then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;begin<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;cbDrive.Items.Add(drive&nbsp;+&nbsp;'&nbsp;&nbsp;['&nbsp;+&nbsp;DriveTypeString(disktype)&nbsp;+&nbsp;']')<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetArrayLength(DrvLetters,&nbsp;N+1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DrvLetters[n]&nbsp;:=&nbsp;drive;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///default&nbsp;select&nbsp;C:&nbsp;Drive&nbsp;(not&nbsp;very&nbsp;wise&nbsp;since&nbsp;the&nbsp;users&nbsp;system&nbsp;drive&nbsp;may&nbsp;not&nbsp;be&nbsp;C:&nbsp;or&nbsp;they<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///may&nbsp;not&nbsp;even&nbsp;have&nbsp;a&nbsp;C:&nbsp;drive<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///if&nbsp;(Copy(drive,1,2)&nbsp;=&nbsp;'C:')&nbsp;then&nbsp;cbDrive.ItemIndex&nbsp;:=&nbsp;n;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///instead&nbsp;default&nbsp;it&nbsp;to&nbsp;the&nbsp;users&nbsp;system&nbsp;drive<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;&nbsp;Copy(drive,1,2)&nbsp;=&nbsp;sd&nbsp;then&nbsp;cbDrive.ItemIndex&nbsp;:=&nbsp;n;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;:=&nbsp;n&nbsp;+&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end<br>
&nbsp;&nbsp;	&nbsp;&nbsp;drivesletters&nbsp;:=&nbsp;Copy(drivesletters,&nbsp;posnull+1,&nbsp;Length(drivesletters));<br>
&nbsp;&nbsp;	end<br>
&nbsp;&nbsp;end;<br>
&nbsp;&nbsp;cbDriveOnClick(cbDrive);<br>
end;<br>
<br>
procedure&nbsp;InitializeWizard();<br>
begin<br>
<br>
///create&nbsp;the&nbsp;combo&nbsp;box&nbsp;for&nbsp;drives<br>
cbDrive:=&nbsp;TComboBox.Create(WizardForm.SelectDirPage);<br>
&nbsp;&nbsp;&nbsp;&nbsp;with&nbsp;cbDrive&nbsp;do<br>
&nbsp;&nbsp;&nbsp;&nbsp;begin<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parent&nbsp;:=&nbsp;WizardForm.DirEdit.Parent;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Left&nbsp;:=&nbsp;WizardForm.DirEdit.Left;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Top&nbsp;:=&nbsp;WizardForm.DirEdit.Top&nbsp;+&nbsp;WizardForm.DirEdit.Height&nbsp;*&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Width&nbsp;:=&nbsp;WizardForm.DirEdit.Width;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Style&nbsp;:=&nbsp;csDropDownList;<br>
&nbsp;&nbsp;&nbsp;&nbsp;end;<br>
<br>
///hide&nbsp;the&nbsp;Browse&nbsp;button<br>
WizardForm.DirBrowseButton.Visible&nbsp;:=&nbsp;false;<br>
<br>
///Edit&nbsp;box&nbsp;for&nbsp;folder&nbsp;is&nbsp;non-editable<br>
WizardForm.DirEdit.Enabled&nbsp;:=&nbsp;false;<br>
<br>
///fill&nbsp;combo&nbsp;box&nbsp;with&nbsp;Drives<br>
FillCombo;<br>
<br>
///set&nbsp;the&nbsp;event&nbsp;on&nbsp;combo&nbsp;change<br>
cbDrive.OnClick&nbsp;:=&nbsp;@cbDriveOnClick&nbsp;;<br>
end;<br>
<br>
///test&nbsp;function<br>
procedure&nbsp;MyAfterInstall2(FileName:&nbsp;String);<br>
begin<br>
&nbsp;&nbsp;MsgBox('Just&nbsp;installed&nbsp;'&nbsp;+&nbsp;FileName&nbsp;+&nbsp;'&nbsp;as&nbsp;'&nbsp;+&nbsp;CurrentFileName&nbsp;+&nbsp;'.',&nbsp;mbInformation,&nbsp;MB_OK);<br>
end;<br>
</font></blockquote><textarea id="taCode1" style="display:none;" rows="1" cols="5"></textarea><textarea id='taCode' style='display:none;' rows='1' cols='20'></textarea></code><script language="javascript" type="text/javascript">highlightSyntax('delphi_Tc4NTM','delphi');</script><br><div id="heading"><h1><font size="1" face="Consolas">Copyright (c) <a href="http://www.krinkels.org/" target="_blank">Krinkels Inc</a></font></h1></div></body></html>