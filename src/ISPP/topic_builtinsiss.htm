<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ru">
  <head>
    <meta content="text/html; charset=windows-1251" http-equiv="content-type">
    <meta http-equiv="X-UA-Compatible" content="IE=8" />
	<meta content="Перевод на русский: Leserg (www.wylek.ru)" name="description">
    <title>Inno Setup Preprocessor: ISPPBuiltins.iss</title>
    <!--[if IE 6]><style type="text/css">html{overflow-y:scroll}</style><![endif]-->
    <link rel="stylesheet" href="../styles.css" type="text/css">
    <script type="text/javascript" src="../topic.js"></script>
  </head>
  <body>
    <h1 class="topicheading">Inno Setup Preprocessor: ISPPBuiltins.iss</h1>
    <div class="topicbody">
      <p>Файл <span style="font-weight: bold;">ISPPBuiltins.iss</span> является
        неотъемлемой частью <span style="font-style: italic;">Inno Setup
          Preprocessor</span> и устанавливается вместе с ним. Он размещается в
        каталоге компилятора и автоматически подключается к файлам сценариев
        так, как будто бы в них используется директива <tt><a class="new" href="topic_include.htm">include</a></tt>
        для подключения внешних инструкций. Файл <span style="font-weight: bold;">ISPPBuiltins.iss</span>
        содержит общие объявления переменных, специальных констант для
        использования в функциях, а также некоторые полезные макросы. Он
        представляет собой обычный сценарий <span style="font-style: italic;">Inno
          Setup</span>, но содержит директивы для <span style="font-weight: bold;">ISPP</span>.</p>
      <p>Чтобы вы могли более подробно познакомиться с функциональностью этого
        файла, ниже представлен его полный листинг:</p>
      <p><span style="color: #006600;"><tt><br />
          </tt></span><span style="color: #006600;"><tt> ; НАЧАЛО
            ISPPBUILTINS.ISS</tt></span><br />
        <span style="color: #006600;"><tt> //</tt></span><br />
        <span style="color: #006600;"><tt> // Inno Setup Preprocessor 5</tt></span><br />
        <span style="color: #006600;"><tt> //</tt></span><br />
        <span style="color: #006600;"><tt> // Авторское право (C) 2001-2004 Alex
            Yackimoff. Все права защищены.</tt></span><br />
        <span style="color: #006600;"><tt> // Совместно с Martijn Laan.</tt></span><br />
        <span style="color: #006600;"><tt> // http://ispp.sourceforge.net</tt></span><br />
        <span style="color: #006600;"><tt> //</tt></span><br />
        <span style="color: #006600;"><tt> // Inno Setup (C) 1997-2009 Jordan
            Russell. Все права защищены.</tt></span><br />
        <span style="color: #006600;"><tt> // </tt></span><tt><span style="color: #006600;"><tt>Совместно
              с</tt> Martijn Laan.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // $Id: ISPPBuiltins.iss,v 1.3
            2010/12/29 15:20:26 mlaan Exp $</span></tt></p>
      <p><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#if</span>
          defined(ISPP_INVOKED) &amp;&amp; !defined(_BUILTINS_ISS_)</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#if</span>
          PREPROCVER &lt; 0x01000000</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;"># error</span>
          Inno Setup Preprocessor version is outdated</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#endif</span></tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          _BUILTINS_ISS_</tt><br />
        <tt> <span style="color: #006600;">//</span></tt></p>
      <p><br />
        <tt><span style="color: #006600;"> //
            ===========================================================================</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Параметры состояний по умолчанию.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // #pragma parseroption -b+ ; быстрая
            оценка логики: on</span></tt> <br />
        <tt><span style="color: #006600;"> // #pragma parseroption -m- ; быстрая
            оценка умножения (0 * A не будет равно A): off</span></tt><br />
        <tt><span style="color: #006600;"> // #pragma parseroption -p+ ;
            строковые литералы без escape-последовательностей: on</span></tt><br />
        <tt><span style="color: #006600;"> // #pragma parseroption -u- ;
            разрешить не объявленные идентификаторы: off</span></tt> <br />
        <tt><span style="color: #006600;"> // #pragma option -c+       ;
            передать сценарий компилятору: on</span></tt> <br />
        <tt><span style="color: #006600;"> // #pragma option -e-       ;
            передать пустые строки транслятору: off</span></tt><br />
        <tt><span style="color: #006600;"> // #pragma option -v-       ; режим
            вывода сообщений: off</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> //
            ---------------------------------------------------------------------------</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Уровни вывода сообщений:</span></tt><br />
        <tt><span style="color: #006600;"> //  0 - подтверждения для #include и
            #file</span></tt><br />
        <tt><span style="color: #006600;"> //  1 - любые данные о всех временных
            файлах созданных #file</span></tt><br />
        <tt><span style="color: #006600;"> //  2 - подтверждения для #insert
            #append</span></tt><br />
        <tt><span style="color: #006600;"> //  3 - зарезервирован</span></tt><br />
        <tt><span style="color: #006600;"> //  4 - подтверждения для #dim,
            #define и #undef</span></tt><br />
        <tt><span style="color: #006600;"> //  5 - зарезервирован</span></tt><br />
        <tt><span style="color: #006600;"> //  6 - подтверждения условий</span></tt><br />
        <tt><span style="color: #006600;"> //  7 - зарезервирован</span></tt><br />
        <tt><span style="color: #006600;"> //  8 - все строки вызванные
            директивой #emit</span></tt><br />
        <tt><span style="color: #006600;"> //  9 - успешные подтверждения вызова
            макросов и функций</span></tt><br />
        <tt><span style="color: #006600;"> // 10 - подтверждения локальных
            распределений макросов</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // #pragma verboselevel 0</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt></p>
      <p><br />
        <tt> <span style="color: #990000; font-weight: bold;">#ifndef</span>
          __POPT_P__</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;"># define</span>
          private CStrings</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;"># pragma</span>
          parseroption -p+</tt><br />
        <tt> <span style="color: #990000; font-weight: bold;">#endif</span></tt></p>
      <tt> <span style="color: #006600;">//</span></tt><br />
      <tt> <span style="color: #006600;">// Установка символа для разделения
          строк (по умолчанию "\").</span></tt> <br />
      <tt> <span style="color: #006600;">//</span></tt><br />
      <tt> <span style="color: #990000; font-weight: bold;">#pragma</span>
        spansymbol <span style="font-style: italic; color: #333333;">"\"</span></tt><br />
      <tt> <span style="color: #006600;">//</span></tt>
      <p><br />
        <tt> <span style="color: #990000; font-weight: bold;">#define</span>
          True               1</tt><br />
        <tt> <span style="color: #990000; font-weight: bold;">#define</span>
          False              0</tt><br />
        <tt> <span style="color: #990000; font-weight: bold;">#define</span>
          Yes                True</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          No                 False</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="color: #990000; font-weight: bold;">#define</span>
          MaxInt             0x7FFFFFFFL</tt><br />
        <tt> <span style="color: #990000; font-weight: bold;">#define</span>
          MinInt             0x80000000L</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          NULL</tt><br />
        <tt> <span style="color: #990000; font-weight: bold;">#define</span>
          void</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // Константы функции TypeOf</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="color: #990000; font-weight: bold;">#define</span>
          TYPE_ERROR         0</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          TYPE_NULL          1</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          TYPE_INTEGER       2</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          TYPE_STRING        3</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          TYPE_MACRO         4</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          TYPE_FUNC          5</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          TYPE_ARRAY         6</tt></p>
      <tt> <span style="color: #006600;">//</span></tt><br />
      <tt><span style="color: #006600;"> // Макропомощник позволяет выяснить
          типы элементов массива или выражения.</span></tt><br />
      <tt><span style="color: #006600;"> // Только Функция TypeOf использует
          идентификатор в качестве его параметра.</span></tt><br />
      <tt><span style="color: #006600;"> // Используйте этот макрос для
          преобразования выражения в идентификатор.</span></tt><br />
      <tt><span style="color: #006600;"> //</span></tt><br />
      <tt> <span style="font-weight: bold; color: #990000;">#define</span>
        TypeOf2(any Expr) TypeOf(Expr)</tt>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;">Константы функции </span></tt>ReadReg</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKEY_CLASSES_ROOT  0x80000000UL</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKEY_CURRENT_USER  0x80000001UL</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKEY_LOCAL_MACHINE 0x80000002UL</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKEY_USERS         0x80000003UL</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKCR               HKEY_CLASSES_ROOT</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKCU               HKEY_CURRENT_USER</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKLM               HKEY_LOCAL_MACHINE</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          HKU                HKEY_USERS</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;">Константы функции </span></tt>Exec</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_HIDE            0</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOWNORMAL      1</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_NORMAL          1</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOWMINIMIZED   2</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOWMAXIMIZED   3</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_MAXIMIZE        3</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOWNOACTIVATE  4</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOW            5</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_MINIMIZE        6</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOWMINNOACTIVE 7</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOWNA          8</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_RESTORE         9</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_SHOWDEFAULT     10</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          SW_MAX             10</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;">Константы функции </span></tt>Find</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_MATCH         0x00</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_BEGINS        0x01</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_ENDS          0x02</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_CONTAINS      0x03</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_CASESENSITIVE 0x04 </tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_SENSITIVE     FIND_CASESENSITIVE</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_AND           0x00</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_OR            0x08</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_NOT           0x10</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FIND_TRIM          0x20</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;">Константы функции </span></tt>FindFirst</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faReadOnly         0x00000001</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faHidden           0x00000002</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faSysFile          0x00000004</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faVolumeID         0x00000008</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faDirectory        0x00000010</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faArchive          0x00000020</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faSymLink          0x00000040</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          faAnyFile          0x0000003F</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // Стандартные имена функции
            GetStringFileInfo</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          COMPANY_NAME       <span style="font-style: italic; color: #333333;">"CompanyName"</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FILE_DESCRIPTION   <span style="font-style: italic; color: #333333;">"FileDescription"</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FILE_VERSION       <span style="font-style: italic; color: #333333;">"FileVersion"</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          INTERNAL_NAME      <span style="font-style: italic; color: #333333;">"InternalName"</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          LEGAL_COPYRIGHT    <span style="font-style: italic; color: #333333;">"LegalCopyright"</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          ORIGINAL_FILENAME  <span style="font-style: italic; color: #333333;">"OriginalFilename"</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          PRODUCT_NAME       <span style="font-style: italic; color: #333333;">"ProductName"</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          PRODUCT_VERSION    <span style="font-style: italic; color: #333333;">"ProductVersion"</span></tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // Помощники функции
            GetStringFileInfo</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          GetFileCompany(str FileName) GetStringFileInfo(FileName, COMPANY_NAME)</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          GetFileCopyright(str FileName) GetStringFileInfo(FileName,
          LEGAL_COPYRIGHT)</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          GetFileDescription(str FileName) GetStringFileInfo(FileName,
          FILE_DESCRIPTION)</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          GetFileProductVersion(str FileName) GetStringFileInfo(FileName,
          PRODUCT_VERSION)</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          GetFileVersionString(str FileName) GetStringFileInfo(FileName,
          FILE_VERSION)</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // Анализ версии</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Макрос обработку данных вызываемой
            функции GetFileVersion, возвращающую </span></tt><br />
        <tt><span style="color: #006600;"> // значение в виде "0.0.0.0". Все
            четыре составляющие версии сохраняются в</span><br />
          <span style="color: #006600;">// отдельных элементах Major, Minor, Rev
            и Build. Макрос возвращает строку,</span></tt><br />
        <tt><span style="color: #006600;"> // полученную функцией
            GetFileVersion.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          DeleteToFirstPeriod(str *S) \</tt><br />
        <tt>   Local[1] = Copy(S, 1, (Local[0] = Pos(".", S)) - 1), \</tt><br />
        <tt>   S = Copy(S, Local[0] + 1), \</tt><br />
        <tt>   Local[1]</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          ParseVersion(str FileName, *Major, *Minor, *Rev, *Build) \</tt><br />
        <tt>   Local[1]  = Local[0] = GetFileVersion(FileName), \</tt><br />
        <tt>   Local[1] == "" ? "" : ( \</tt><br />
        <tt>     Major   = Int(DeleteToFirstPeriod(Local[1])), \</tt><br />
        <tt>     Minor   = Int(DeleteToFirstPeriod(Local[1])), \</tt><br />
        <tt>     Rev     = Int(DeleteToFirstPeriod(Local[1])), \</tt><br />
        <tt>     Build   = Int(Local[1]), \</tt><br />
        <tt>   Local[0])</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;">Функция </span></tt>EncodeVer</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет кодирование версии с
            учётом четырех элементов в целое 32-бит число</span></tt><br />
        <tt><span style="color: #006600;"> // (8 бит на каждый элемент, т.е. их
            значения должны быть в диапазоне 0...255).</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          EncodeVer(int Major, int Minor, int Revision = 0, int Build = -1) \</tt><br />
        <tt>   Major &lt;&lt; 24 | (Minor &amp; 0xFF) &lt;&lt; 16 | (Revision
          &amp; 0xFF) &lt;&lt; 8 | (Build &gt;= 0 ? Build &amp; 0xFF : 0)</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>DecodeVer</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет декодирование 32-бит
            числа версии в строковый вид.</span></tt><br />
        <tt><span style="color: #006600;"> // Параметр Digits указывает на
            количество отображаемых элементов.</span></tt><br />
        <tt><span style="color: #006600;"> // Если четвертый элемент равен 0, то
            он не будет показан в любом случае.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          DecodeVer(int Ver, int Digits = 3) \</tt><br />
        <tt>   Str(Ver &gt;&gt; 0x18 &amp; 0xFF) + (Digits &gt; 1 ? <span style="font-style: italic; color: #333333;">"."</span>
          : "") + \</tt><br />
        <tt>   (Digits &gt; 1 ? \</tt><br />
        <tt>     Str(Ver &gt;&gt; 0x10 &amp; 0xFF) + (Digits &gt; 2 ? <span style="font-style: italic; color: #333333;">"."</span>
          : "") : "") + \</tt><br />
        <tt>   (Digits &gt; 2 ? \</tt><br />
        <tt>     Str(Ver &gt;&gt; 0x08 &amp; 0xFF) + (Digits &gt; 3 &amp;&amp;
          (Local = Ver &amp; 0xFF) ? <span style="font-style: italic; color: #333333;">"."</span>
          : "") : "") + \</tt><br />
        <tt>   (Digits &gt; 3 &amp;&amp; Local ? \</tt><br />
        <tt>     Str(Ver &amp; 0xFF) : "")</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>FindSection</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Возвращает индекс строки,
            следующей сразу после заголовка секции.</span></tt><br />
        <tt><span style="color: #006600;"> // Этот макрос предназначен для
            использования с директивой #insert.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FindSection(str Section = <span style="font-style: italic; color: #333333;">"Files"</span>)
          \</tt><br />
        <tt>   Find(0, <span style="font-style: italic; color: #333333;">"["</span>
          + Section + <span style="font-style: italic; color: #333333;">"]"</span>,
          FIND_MATCH | FIND_TRIM) + 1</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>FindSectionEnd</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Возвращает индекс строки,
            следующей после последней записи в секции.</span></tt><br />
        <tt><span style="color: #006600;"> // Этот макрос предназначен для
            использования с директивой #insert.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#if</span> VER
          &gt;= 0x03000000</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;"># define</span>
          FindNextSection(int Line) \</tt><br />
        <tt>     Find(Line, <span style="font-style: italic; color: #333333;">"["</span>,
          FIND_BEGINS | FIND_TRIM, <span style="font-style: italic; color: #333333;">"]"</span>,
          FIND_ENDS | FIND_AND)</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;"># define</span>
          FindSectionEnd(str Section = <span style="font-style: italic; color: #333333;">"Files"</span>)
          \</tt><br />
        <tt>     FindNextSection(FindSection(Section))</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#else</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;"># define</span>
          FindSectionEnd(str Section = <span style="font-style: italic; color: #333333;">"Files"</span>)
          \</tt><br />
        <tt>     FindSection(Section) + EntryCount(Section)</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#endif</span></tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>FindCode</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Возвращает индекс строки,
            следующей после заголовка секции [Code]</span></tt><br />
        <tt><span style="color: #006600;"> // или ключевого слова "program",
            если таковое имеется.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          FindCode() \</tt><br />
        <tt>     Local[1] = FindSection(<span style="font-style: italic; color: #333333;">"Code"</span>),
          \</tt><br />
        <tt>     Local[0] = Find(Local[1] - 1, <span style="font-style: italic; color: #333333;">"program"</span>,
          FIND_BEGINS, <span style="font-style: italic; color: #333333;">";"</span>,
          FIND_ENDS | FIND_AND), \</tt><br />
        <tt>     (Local[0] &lt; 0 ? Local[1] : Local[0] + 1)</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>ExtractFilePath</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Возвращает путь к каталогу без
            обратной косой черты (кроме корневого</span></tt><br />
        <tt><span style="color: #006600;"> // каталога) для заданного имени
            файла. Если PathName не является путем,</span></tt><br />
        <tt><span style="color: #006600;"> // то возвращается пустая строка.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          ExtractFilePath(str PathName) \</tt><br />
        <tt>   (Local[0] = \</tt><br />
        <tt>     !(Local[1] = RPos(<span style="font-style: italic; color: #333333;">"\"</span>,
          PathName)) ? \</tt><br />
        <tt>       "" : \</tt><br />
        <tt>       Copy(PathName, 1, Local[1] - 1)), \</tt><br />
        <tt>   Local[0] + \</tt><br />
        <tt>     ((Local[2] = Len(Local[0])) == 2 &amp;&amp; Copy(Local[0],
          Local[2]) == <span style="font-style: italic; color: #333333;">":"</span>
          ? \</tt><br />
        <tt>       <span style="font-style: italic; color: #333333;">"\"</span>
          : \</tt><br />
        <tt>       "")</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          ExtractFileDir(str PathName) \</tt><br />
        <tt>   RemoveBackslash(ExtractFilePath(PathName))</tt><br />
        <tt> </tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          ExtractFileExt(str PathName) \</tt><br />
        <tt>   Local[0] = RPos(<span style="font-style: italic; color: #333333;">"."</span>,
          PathName), \</tt><br />
        <tt>   Copy(PathName, Local[0] + 1)</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>ExtractFileName</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет извлечение имени файла
            из полного пути.</span></tt><br />
        <tt><span style="color: #006600;"> // Если путь заканчивается обратной
            косой чертой, то возвращается пустая строка.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          ExtractFileName(str PathName) \</tt><br />
        <tt>   !(Local[0] = RPos(<span style="font-style: italic; color: #333333;">"\"</span>,
          PathName)) ? \</tt><br />
        <tt>     PathName : \</tt><br />
        <tt>     Copy(PathName, Local[0] + 1)</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>ChangeFileExt</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет изменение расширения в
            имени файла на новое.</span></tt><br />
        <tt><span style="color: #006600;"> // Расширение не должно содержать
            точки.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          ChangeFileExt(str FileName, str NewExt) \</tt><br />
        <tt>   !(Local[0] = RPos(<span style="font-style: italic; color: #333333;">"."</span>,
          FileName)) ? \</tt><br />
        <tt>     FileName + <span style="font-style: italic; color: #333333;">"."</span>
          + NewExt : \</tt><br />
        <tt>     Copy(FileName, 1, Local[0]) + NewExt</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>AddBackslash</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет добавление обратной
            косой черты к строке.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          AddBackslash(str S) \</tt><br />
        <tt>   Copy(S, Len(S)) == <span style="font-style: italic; color: #333333;">"\"</span>
          ? S : S + <span style="font-style: italic; color: #333333;">"\"</span></tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>RemoveBackslash</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет удаление обратной косой
            черты из строки,</span></tt><br />
        <tt><span style="color: #006600;"> // если она не указывает на корневой
            каталог.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          RemoveBackslash(str S) \</tt><br />
        <tt>   Local[0] = Len(S), \</tt><br />
        <tt>   Local[0] &gt; 0 ? \</tt><br />
        <tt>     Copy(S, Local[0]) == <span style="font-style: italic; color: #333333;">"\"</span>
          ? \</tt><br />
        <tt>       (Local[0] == 3 &amp;&amp; Copy(S, 2, 1) == <span style="font-style: italic; color: #333333;">":"</span>
          ? \</tt><br />
        <tt>         S : \</tt><br />
        <tt>         Copy(S, 1, Local[0] - 1)) : \</tt><br />
        <tt>       S : \</tt><br />
        <tt>     ""</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>Delete</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет удаление определённого
            числа символов в строке S,</span></tt><br />
        <tt><span style="color: #006600;"> // начиная с позиции Index. Функция
            Delete аналогична функции</span></tt><br />
        <tt><span style="color: #006600;"> // в Delphi (из модуля System).</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          Delete(str *S, int Index, int Count = MaxInt) \</tt><br />
        <tt>   S = Copy(S, 1, Index - 1) + Copy(S, Index + Count)</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>Insert</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Выполняет вставку указанной
            подстроки Substr в строку S,</span></tt><br />
        <tt><span style="color: #006600;"> // начиная с позиции Index.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          Insert(str *S, int Index, str Substr) \</tt><br />
        <tt>   Index &gt; Len(S) + 1 ? \</tt><br />
        <tt>     S : \</tt><br />
        <tt>     S = Copy(S, 1, Index - 1) + SubStr + Copy(S, Index)</tt></p>
      <p><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> // </span></tt><tt><span style="color: #006600;"><tt><span
                style="color: #006600;"><tt><span style="color: #006600;">Функция
                    </span></tt></span></tt>YesNo</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt><span style="color: #006600;"> // Возвращает ненулевое значение,
            если строка передает "yes", "true" или "1".</span></tt><br />
        <tt><span style="color: #006600;"> // Функция предназначена для
            использования с функцией SetupSetting.</span></tt><br />
        <tt><span style="color: #006600;"> // Этот макрос замещает функцию YesNo
            из предыдущих выпусков.</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          YesNo(str S) \</tt><br />
        <tt>   (S = LowerCase(S)) == <span style="font-style: italic; color: #333333;">"yes"</span>
          || S == <span style="font-style: italic; color: #333333;">"true"</span>
          || S == <span style="font-style: italic; color: #333333;">"1"</span></tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          IsDirSet(str SetupDirective) \</tt><br />
        <tt>   YesNo(SetupSetting(SetupDirective))</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt><span style="color: #006600;"> //</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          Power(int X, int P = 2) \</tt><br />
        <tt>   !P ? 1 : X * Power(X, P - 1)</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          Min(int A, int B, int C = MaxInt)  \</tt><br />
        <tt>   A &lt; B ? A &lt; C ? Int(A) : Int(C) : Int(B)</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#define</span>
          Max(int A, int B, int C = MinInt)  \</tt><br />
        <tt>   A &gt; B ? A &gt; C ? Int(A) : Int(C) : Int(B)</tt><br />
        <tt> <span style="color: #006600;">//</span></tt><br />
        <tt> </tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#ifdef</span>
          CStrings</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;"># pragma</span>
          parseroption -p-</tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#endif</span></tt><br />
        <tt> <span style="font-weight: bold; color: #990000;">#endif</span></tt><br />
        <tt> <span style="color: #006600;">; КОНЕЦ ISPPBUILTINS.ISS</span></tt><br />
      </p>
    </div>
  </body>
</html>
