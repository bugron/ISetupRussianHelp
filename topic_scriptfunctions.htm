<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251" />
<meta http-equiv="X-UA-Compatible" content="IE=8" />
<title>Pascal Scripting: Встроенные функции</title>
<!--[if IE 6]><style type="text/css">html{overflow-y:scroll}</style><![endif]-->
<link rel="stylesheet" type="text/css" href="styles.css" />
<script type="text/javascript" src="topic.js"></script>
</head>
<body>
<h1 class="topicheading">Pascal Scripting: Встроенные функции</h1>
<div class="topicbody">
  <p>Скрипт Pascal может вызвать несколько встроенных функций.</p>
  <h2 class="heading">Поддерживаемые функции</h2>
  <p>Вот список поддерживаемых функций, которые можно вызвать из скрипта Pascal.</p>
  <p><b>Информационные функции инсталлятора и деинсталлятора:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getcmdtail.htm">GetCmdTail</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_paramcount.htm">ParamCount</a>: Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_paramstr.htm">ParamStr</a>(Index: Integer): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_activelanguage.htm">ActiveLanguage</a>: String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_custommessage.htm">CustomMessage</a>(const MsgName: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_fmtmessage.htm">FmtMessage</a>(const S: String; const Args: array of String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_setupmessage.htm">SetupMessage</a>(const ID: TSetupMessageID): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_wizarddirvalue.htm">WizardDirValue</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_wizardgroupvalue.htm">WizardGroupValue</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_wizardnoicons.htm">WizardNoIcons</a>: Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_wizardsetuptype.htm">WizardSetupType</a>(const Description: Boolean): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_wizardselectedcomponents.htm">WizardSelectedComponents</a>(const Descriptions: Boolean): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_wizardselectedtasks.htm">WizardSelectedTasks</a>(const Descriptions: Boolean): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_wizardsilent.htm">WizardSilent</a>: Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_isuninstaller.htm">IsUninstaller</a>: Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_uninstallsilent.htm">UninstallSilent</a>: Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_currentfilename.htm">CurrentFileName</a>: String;</tt><br />
	<tt>function <a href="isxfunc/topic_isxfunc_currentsourcefilename.htm">CurrentSourceFilename</a>: String;</tt><br/>
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_expandconstant.htm">ExpandConstant</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_expandconstantex.htm">ExpandConstantEx</a>(const S: String; const CustomConst, CustomValue: String): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_iscomponentselected.htm">IsComponentSelected</a>(const Components: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_istaskselected.htm">IsTaskSelected</a>(const Tasks: String): Boolean;</tt><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_extracttemporaryfile.htm">ExtractTemporaryFile</a>(const FileName: String);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_extracttemporaryfiles.htm">ExtractTemporaryFiles</a>(const Pattern: String): Integer;</tt><br/>
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getpreviousdata.htm">GetPreviousData</a>(const ValueName, DefaultValueData: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_setpreviousdata.htm">SetPreviousData</a>(const PreviousDataKey: Integer; const ValueName, ValueData: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_terminated.htm">Terminated</a>: Boolean;</tt><br/>
    <br/>
    <tt>function <a href="isxfunc/topic_isxfunc_registerextracloseapplicationsresource.htm">RegisterExtraCloseApplicationsResource</a>(const DisableFsRedir: Boolean; const AFilename: String): Boolean;</tt><br/>
    <tt>function <a href="isxfunc/topic_isxfunc_rmsessionstarted.htm">RmSessionStarted</a>: Boolean;</tt><br/>
    <br />
  </p>
  <p><b>Функции исключения:</b><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_abort.htm">Abort</a>;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_raiseexception.htm">RaiseException</a>(const Msg: String);</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getexceptionmessage.htm">GetExceptionMessage</a>: String;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_showexceptionmessage.htm">ShowExceptionMessage</a>;</tt><br />
  </p>
  <p><b>Системные функции:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_isadminloggedon.htm">IsAdminLoggedOn</a>: Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_ispoweruserloggedon.htm">IsPowerUserLoggedOn</a>: Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getwindowsversion.htm">GetWindowsVersion</a>: Cardinal;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_getwindowsversionex.htm">GetWindowsVersionEx</a>(var Version: TWindowsVersion);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getwindowsversionstring.htm">GetWindowsVersionString</a>: String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_iswin64.htm">IsWin64</a>: Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_is64bitinstallmode.htm">Is64BitInstallMode</a>: Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_processorarchitecture.htm">ProcessorArchitecture</a>: TSetupProcessorArchitecture;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_installonthisversion.htm">InstallOnThisVersion</a>(const MinVersion, OnlyBelowVersion: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getenv.htm">GetEnv</a>(const EnvVar: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getusernamestring.htm">GetUserNameString</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getcomputernamestring.htm">GetComputerNameString</a>: String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getuilanguage.htm">GetUILanguage</a>: Integer;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_fontexists.htm">FontExists</a>(const FaceName: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_findwindowbyclassname.htm">FindWindowByClassName</a>(const ClassName: String): HWND;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_findwindowbywindowname.htm">FindWindowByWindowName</a>(const WindowName: String): HWND;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_sendmessage.htm">SendMessage</a>(const Wnd: HWND; const Msg, WParam, LParam: Longint): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_postmessage.htm">PostMessage</a>(const Wnd: HWND; const Msg, WParam, LParam: Longint): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_sendnotifymessage.htm">SendNotifyMessage</a>(const Wnd: HWND; const Msg, WParam, LParam: Longint): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_registerwindowmessage.htm">RegisterWindowMessage</a>(const Name: String): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_sendbroadcastmessage.htm">SendBroadcastMessage</a>(const Msg, WParam, LParam: Longint): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_postbroadcastmessage.htm">PostBroadcastMessage</a>(const Msg, WParam, LParam: Longint): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_sendbroadcastnotifymessage.htm">SendBroadcastNotifyMessage</a>(const Msg, WParam, LParam: Longint): Boolean;</tt><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_createmutex.htm">CreateMutex</a>(const Name: String);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_checkformutexes.htm">CheckForMutexes</a>(Mutexes: String): Boolean;</tt><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_makependingfilerenameoperationschecksum.htm">MakePendingFileRenameOperationsChecksum</a>: String;</tt><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_unloaddll.htm">UnloadDLL</a>(Filename: String);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_dllgetlasterror.htm">DLLGetLastError</a>(): Longint;</tt><br />
  </p>
  <p><b>Строковые функции:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_chr.htm">Chr</a>(B: Byte): Char;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_ord.htm">Ord</a>(C: Char): Byte;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_copy.htm">Copy</a>(S: String; Index, Count: Integer): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_length.htm">Length</a>(s: String): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_lowercase.htm">Lowercase</a>(S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_uppercase.htm">Uppercase</a>(S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_ansilowercase.htm">AnsiLowercase</a>(S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_ansiuppercase.htm">AnsiUppercase</a>(S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_stringofchar.htm">StringOfChar</a>(c: Char; I : Longint): String;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_delete.htm">Delete</a>(var S: String; Index, Count: Integer);</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_insert.htm">Insert</a>(Source: String; var Dest: String; Index: Integer);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_stringchange.htm">StringChange</a>(var S: String; const FromStr, ToStr: String): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_stringchangeex.htm">StringChangeEx</a>(var S: String; const FromStr, ToStr: String; const SupportDBCS: Boolean): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_pos.htm">Pos</a>(SubStr, S: String): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_addquotes.htm">AddQuotes</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_removequotes.htm">RemoveQuotes</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_convertpercentstr.htm">ConvertPercentStr</a>(var S: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_comparetext.htm">CompareText</a>(const S1, S2: string): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_comparestr.htm">CompareStr</a>(const S1, S2: string): Integer;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_format.htm">Format</a>(const Format: string; const Args: array of const): string;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_trim.htm">Trim</a>(const S: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_trimleft.htm">TrimLeft</a>(const S: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_trimright.htm">TrimRight</a>(const S: string): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_strtointdef.htm">StrToIntDef</a>(s: string; def: Longint): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_strtoint.htm">StrToInt</a>(s: string): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_strtoint64def.htm">StrToInt64Def</a>(s: string; def: Int64): Int64;</tt><br/>
    <tt>function <a href="isxfunc/topic_isxfunc_strtoint64.htm">StrToInt64</a>(s: string): Int64;</tt><br/>
	<tt>function <a href="isxfunc/topic_isxfunc_strtofloat.htm">StrToFloat</a>(s: string): Extended;</tt><br/>
    <tt>function <a href="isxfunc/topic_isxfunc_inttostr.htm">IntToStr</a>(i: Int64): String;</tt><br/>
	<tt>function <a href="isxfunc/topic_isxfunc_floattostr.htm">FloatToStr</a>(e: extended): String;</tt><br/>
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_charlength.htm">CharLength</a>(const S: String; const Index: Integer): Integer;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_addbackslash.htm">AddBackslash</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_removebackslashunlessroot.htm">RemoveBackslashUnlessRoot</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_removebackslash.htm">RemoveBackslash</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_addperiod.htm">AddPeriod</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_changefileext.htm">ChangeFileExt</a>(const FileName, Extension: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_extractfileext.htm">ExtractFileExt</a>(const FileName: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_extractfiledir.htm">ExtractFileDir</a>(const FileName: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_extractfilepath.htm">ExtractFilePath</a>(const FileName: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_extractfilename.htm">ExtractFileName</a>(const FileName: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_extractfiledrive.htm">ExtractFileDrive</a>(const FileName: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_extractrelativepath.htm">ExtractRelativePath</a>(const BaseName, DestName: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_expandfilename.htm">ExpandFileName</a>(const FileName: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_expanduncfilename.htm">ExpandUNCFileName</a>(const FileName: string): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getdatetimestring.htm">GetDateTimeString</a>(const DateTimeFormat: String; const DateSeparator, TimeSeparator: Char): String;</tt><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_setlength.htm">SetLength</a>(var S: String; L: Longint);</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_chartooembuff.htm">CharToOemBuff</a>(var S: AnsiString);</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_oemtocharbuff.htm">OemToCharBuff</a>(var S: AnsiString);</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getmd5ofstring.htm">GetMD5OfString</a>(const S: AnsiString): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getmd5ofunicodestring.htm">GetMD5OfUnicodeString</a>(const S: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getsha1ofstring.htm">GetSHA1OfString</a>(const S: AnsiString): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getsha1ofunicodestring.htm">GetSHA1OfUnicodeString</a>(const S: String): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_syserrormessage.htm">SysErrorMessage</a>(ErrorCode: Integer): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_minimizepathname.htm">MinimizePathName</a>(const Filename: String; const Font: TFont; MaxLen: Integer): String;</tt><br />
  </p>
  <p><b>Функции массивов:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getarraylength.htm">GetArrayLength</a>(var Arr: Array): Longint;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_setarraylength.htm">SetArrayLength</a>(var Arr: Array; I: Longint);</tt><br />
  </p>
  <p><b>Различные функции:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_null.htm">Null</a>: Variant;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_unassigned.htm">Unassigned</a>: Variant;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_varisempty.htm">VarIsEmpty</a>(const V: Variant): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_varisclear.htm">VarIsClear</a>(const V: Variant): Boolean;</tt><br/>
    <tt>function <a href="isxfunc/topic_isxfunc_varisnull.htm">VarIsNull</a>(const V: Variant): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_vartype.htm">VarType</a>(const V: Variant): TVarType;</tt><br />
  </p>
  <p><b>Функции файловой системы:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_direxists.htm">DirExists</a>(const Name: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_fileexists.htm">FileExists</a>(const Name: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_fileordirexists.htm">FileOrDirExists</a>(const Name: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_filesize.htm">FileSize</a>(const Name: String; var Size: Integer): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getspaceondisk.htm">GetSpaceOnDisk</a>(const Path: String; const InMegabytes: Boolean; var Free, Total: Cardinal): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getspaceondisk64.htm">GetSpaceOnDisk64</a>(const Path: String; var Free, Total: Int64): Boolean;</tt><br/>
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_filesearch.htm">FileSearch</a>(const Name, DirList: string): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_findfirst.htm">FindFirst</a>(const FileName: String; var FindRec: TFindRec): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_findnext.htm">FindNext</a>(var FindRec: TFindRec): Boolean;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_findclose.htm">FindClose</a>(var FindRec: TFindRec);</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getcurrentdir.htm">GetCurrentDir</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_setcurrentdir.htm">SetCurrentDir</a>(const Dir: string): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getwindir.htm">GetWinDir</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getsystemdir.htm">GetSystemDir</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getsyswow64dir.htm">GetSysWow64Dir</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_gettempdir.htm">GetTempDir</a>: String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getshellfolder.htm">GetShellFolder</a>(Common: Boolean; const ID: TShellFolderID): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getshellfolderbycsidl.htm">GetShellFolderByCSIDL</a>(const Folder: Integer; const Create: Boolean): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getshortname.htm">GetShortName</a>(const LongName: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_generateuniquename.htm">GenerateUniqueName</a>(Path: String; const Extension: String): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getversionnumbers.htm">GetVersionNumbers</a>(const Filename: String; var VersionMS, VersionLS: Cardinal): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getversionnumbersstring.htm">GetVersionNumbersString</a>(const Filename: String; var Version: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_isprotectedsystemfile.htm">IsProtectedSystemFile</a>(const Filename: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getmd5offile.htm">GetMD5OfFile</a>(const Filename: String): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getsha1offile.htm">GetSHA1OfFile</a>(const Filename: String): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_enablefsredirection.htm">EnableFsRedirection</a>(const Enable: Boolean): Boolean;</tt><br />
  </p>
  <p><b>Функции файлов:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_exec.htm">Exec</a>(const Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ResultCode: Integer): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_execasoriginaluser.htm">ExecAsOriginalUser</a>(const Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ResultCode: Integer): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_shellexec.htm">ShellExec</a>(const Verb, Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ErrorCode: Integer): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_shellexecasoriginaluser.htm">ShellExecAsOriginalUser</a>(const Verb, Filename, Params, WorkingDir: String; const ShowCmd: Integer; const Wait: TExecWait; var ErrorCode: Integer): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_renamefile.htm">RenameFile</a>(const OldName, NewName: string): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_filecopy.htm">FileCopy</a>(const ExistingFile, NewFile: String; const FailIfExists: Boolean): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_deletefile.htm">DeleteFile</a>(const FileName: string): Boolean;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_delaydeletefile.htm">DelayDeleteFile</a>(const Filename: String; const Tries: Integer);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_setntfscompression.htm">SetNTFSCompression</a>(const FileOrDir: String; Compress: Boolean): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_loadstringfromfile.htm">LoadStringFromFile</a>(const FileName: String; var S: AnsiString): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_loadstringsfromfile.htm">LoadStringsFromFile</a>(const FileName: String; var S: TArrayOfString): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_savestringtofile.htm">SaveStringToFile</a>(const FileName: String; const S: AnsiString; const Append: Boolean): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_savestringstofile.htm">SaveStringsToFile</a>(const FileName: String; const S: TArrayOfString; const Append: Boolean): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_savestringstoutf8file.htm">SaveStringsToUTF8File</a>(const FileName: String; const S: TArrayOfString; const Append: Boolean): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_createdir.htm">CreateDir</a>(const Dir: string): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_forcedirectories.htm">ForceDirectories</a>(Dir: string): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_removedir.htm">RemoveDir</a>(const Dir: string): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_deltree.htm">DelTree</a>(const Path: String; const IsDir, DeleteFiles, DeleteSubdirsAlso: Boolean): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_createshelllink.htm">CreateShellLink</a>(const Filename, Description, ShortcutTo, Parameters, WorkingDir, IconFilename: String; const IconIndex, ShowCmd: Integer): String;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_unpinshelllink.htm">UnpinShellLink</a>(const Filename: String): Boolean;</tt><br/>
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_registerserver.htm">RegisterServer</a>(const Is64Bit: Boolean; const Filename: String; const FailCriticalErrors: Boolean);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_unregisterserver.htm">UnregisterServer</a>(const Is64Bit: Boolean; const Filename: String; const FailCriticalErrors: Boolean): Boolean;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_registertypelibrary.htm">RegisterTypeLibrary</a>(const Is64Bit: Boolean; const Filename: String);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_unregistertypelibrary.htm">UnregisterTypeLibrary</a>(const Is64Bit: Boolean; const Filename: String): Boolean</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_incrementsharedcount.htm">IncrementSharedCount</a>(const Is64Bit: Boolean; const Filename: String; const AlreadyExisted: Boolean);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_decrementsharedcount.htm">DecrementSharedCount</a>(const Is64Bit: Boolean; const Filename: String): Boolean;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_restartreplace.htm">RestartReplace</a>(const TempFile, DestFile: String);</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_unregisterfont.htm">UnregisterFont</a>(const FontName, FontFilename: String);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_modifypiffile.htm">ModifyPifFile</a>(const Filename: String; const CloseOnExit: Boolean): Boolean;</tt><br />
  </p>
  <p><b>Функции реестра:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_regkeyexists.htm">RegKeyExists</a>(const RootKey: Integer; const SubKeyName: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regvalueexists.htm">RegValueExists</a>(const RootKey: Integer; const SubKeyName, ValueName: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_reggetsubkeynames.htm">RegGetSubkeyNames</a>(const RootKey: Integer; const SubKeyName: String; var Names: TArrayOfString): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_reggetvaluenames.htm">RegGetValueNames</a>(const RootKey: Integer; const SubKeyName: String; var Names: TArrayOfString): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_regquerystringvalue.htm">RegQueryStringValue</a>(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultStr: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regquerymultistringvalue.htm">RegQueryMultiStringValue</a>(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultStr: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regquerydwordvalue.htm">RegQueryDWordValue</a>(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultDWord: Cardinal): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regquerybinaryvalue.htm">RegQueryBinaryValue</a>(const RootKey: Integer; const SubKeyName, ValueName: String; var ResultStr: AnsiString): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_regwritestringvalue.htm">RegWriteStringValue</a>(const RootKey: Integer; const SubKeyName, ValueName, Data: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regwriteexpandstringvalue.htm">RegWriteExpandStringValue</a>(const RootKey: Integer; const SubKeyName, ValueName, Data: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regwritemultistringvalue.htm">RegWriteMultiStringValue</a>(const RootKey: Integer; const SubKeyName, ValueName, Data: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regwritedwordvalue.htm">RegWriteDWordValue</a>(const RootKey: Integer; const SubKeyName, ValueName: String; const Data: Cardinal): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regwritebinaryvalue.htm">RegWriteBinaryValue</a>(const RootKey: Integer; const SubKeyName, ValueName: String; const Data: AnsiString): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_regdeletekeyincludingsubkeys.htm">RegDeleteKeyIncludingSubkeys</a>(const RootKey: Integer; const SubkeyName: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regdeletekeyifempty.htm">RegDeleteKeyIfEmpty</a>(const RootKey: Integer; const SubkeyName: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_regdeletevalue.htm">RegDeleteValue</a>(const RootKey: Integer; const SubKeyName, ValueName: String): Boolean;</tt><br />
  </p>
  <p><b>Функции файлов INI: </b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_inikeyexists.htm">IniKeyExists</a>(const Section, Key, Filename: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_isinisectionempty.htm">IsIniSectionEmpty</a>(const Section, Filename: String): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_getinibool.htm">GetIniBool</a>(const Section, Key: String; const Default: Boolean; const Filename: String): Boolean</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getiniint.htm">GetIniInt</a>(const Section, Key: String; const Default, Min, Max: Longint; const Filename: String): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getinistring.htm">GetIniString</a>(const Section, Key, Default, Filename: String): String;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_setinibool.htm">SetIniBool</a>(const Section, Key: String; const Value: Boolean; const Filename: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_setiniint.htm">SetIniInt</a>(const Section, Key: String; const Value: Longint; const Filename: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_setinistring.htm">SetIniString</a>(const Section, Key, Value, Filename: String): Boolean;</tt><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_deleteinisection.htm">DeleteIniSection</a>(const Section, Filename: String);</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_deleteinientry.htm">DeleteIniEntry</a>(const Section, Key, Filename: String);</tt><br />
  </p>
  <p><b>Функции дополнительных страниц Мастера: </b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_createinputquerypage.htm">CreateInputQueryPage</a>(const AfterID: Integer; const ACaption, ADescription, ASubCaption: String): TInputQueryWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createinputoptionpage.htm">CreateInputOptionPage</a>(const AfterID: Integer; const ACaption, ADescription, ASubCaption: String; Exclusive, ListBox: Boolean): TInputOptionWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createinputdirpage.htm">CreateInputDirPage</a>(const AfterID: Integer; const ACaption, ADescription, ASubCaption: String; AAppendDir: Boolean; ANewFolderName: String): TInputDirWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createinputfilepage.htm">CreateInputFilePage</a>(const AfterID: Integer; const ACaption, ADescription, ASubCaption: String): TInputFileWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createoutputmsgpage.htm">CreateOutputMsgPage</a>(const AfterID: Integer; const ACaption, ADescription, AMsg: String): TOutputMsgWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createoutputmsgmemopage.htm">CreateOutputMsgMemoPage</a>(const AfterID: Integer; const ACaption, ADescription, ASubCaption: String; const AMsg: AnsiString): TOutputMsgMemoWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createoutputprogresspage.htm">CreateOutputProgressPage</a>(const ACaption, ADescription: String): TOutputProgressWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createcustompage.htm">CreateCustomPage</a>(const AfterID: Integer; const ACaption, ADescription: String): TWizardPage;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_createcustomform.htm">CreateCustomForm</a>: TSetupForm;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_pagefromid.htm">PageFromID</a>(const ID: Integer): TWizardPage;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_pageindexfromid.htm">PageIndexFromID</a>(const ID: Integer): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_scalex.htm">ScaleX</a>(X: Integer): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_scaley.htm">ScaleY</a>(Y: Integer): Integer;</tt><br />
  </p>
  <p><b>Диалоговые функции:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_msgbox.htm">MsgBox</a>(const Text: String; const Typ: TMsgBoxType; const Buttons: Integer): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_suppressiblemsgbox.htm">SuppressibleMsgBox</a>(const Text: String; const Typ: TMsgBoxType; const Buttons, Default: Integer): Integer;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getopenfilename.htm">GetOpenFileName</a>(const Prompt: String; var FileName: String; const InitialDirectory, Filter, DefaultExtension: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getopenfilenamemulti.htm">GetOpenFileNameMulti</a>(const Prompt: String; var FileNameList: TStrings; const InitialDirectory, Filter, DefaultExtension: String): Boolean;</tt><br/>
    <tt>function <a href="isxfunc/topic_isxfunc_getsavefilename.htm">GetSaveFileName</a>(const Prompt: String; var FileName: String; const InitialDirectory, Filter, DefaultExtension: String): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_browseforfolder.htm">BrowseForFolder</a>(const Prompt: String; var Directory: String; const NewFolderButton: Boolean): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_exitsetupmsgbox.htm">ExitSetupMsgBox</a>: Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_selectdisk.htm">SelectDisk</a>(const DiskNumber: Integer; const AFilename: String; var Path: String): Boolean;</tt><br/>
  </p>
  <p><b>Функции, поддерживающие объекты СOM:</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_createoleobject.htm">CreateOleObject</a>(const ClassName: string): Variant;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_getactiveoleobject.htm">GetActiveOleObject</a>(const ClassName: string): Variant;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_idispatchinvoke.htm">IDispatchInvoke</a>(Self: IDispatch; PropertySet: Boolean; const Name: String; Par: array of variant): variant;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_createcomobject.htm">CreateComObject</a>(const ClassID: TGUID): IUnknown;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_stringtoguid.htm">StringToGUID</a>(const S: String): TGUID;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_olecheck.htm">OleCheck</a>(Result: HResult);</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_cofreeunusedlibraries.htm">CoFreeUnusedLibraries</a>;</tt><br />
  </p>
  <p><b>Функции LOG: </b><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_log.htm">Log</a>(const S: String);</tt><br />
  </p>
  <p><b>Другие фукции</b><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_sleep.htm">Sleep</a>(const Milliseconds: LongInt);</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_random.htm">Random</a>(const Range: Integer): Integer;</tt><br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_beep.htm">Beep</a>;</tt><br />
    <br />
    <tt>procedure <a href="isxfunc/topic_isxfunc_bringtofrontandrestore.htm">BringToFrontAndRestore</a>;</tt><br />
  </p>
  <p><b>Функции для DLL (устарели):</b><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_loaddll.htm">LoadDLL</a>(const DLLName: String; var ErrorCode: Integer): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_calldllproc.htm">CallDLLProc</a>(const DLLHandle: Longint; const ProcName: String; const Param1, Param2: Longint; var Result: Longint): Boolean;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_freedll.htm">FreeDLL</a>(const DLLHandle: Longint): Boolean;</tt><br />
    <br />
    <tt>function <a href="isxfunc/topic_isxfunc_caststringtointeger.htm">CastStringToInteger</a>(var S: String): Longint;</tt><br />
    <tt>function <a href="isxfunc/topic_isxfunc_castintegertostring.htm">CastIntegerToString</a>(const L: Longint): String;</tt><br />
  </p>
  <h2 class="heading">Константы</h2>
  <p>Список констант, используемых функциями:</p>
  <p><i>CurStep значения </i><br />
    ssInstall, ssPostInstall, ssDone</p>
  <p><i>CurPage значения </i><br />
    wpWelcome, wpLicense, wpPassword, wpInfoBefore, wpUserInfo, wpSelectDir, wpSelectComponents, wpSelectProgramGroup, wpSelectTasks, wpReady, wpPreparing, wpInstalling, wpInfoAfter, wpFinished</p>
  <p><i>TMsgBoxType</i><br />
    mbInformation, mbConfirmation, mbError, mbCriticalError</p>
  <p><i>MsgBox - - идентификаторы кнопок (Buttons flags)</i><br />
    MB_OK, MB_OKCANCEL, MB_ABORTRETRYIGNORE, MB_YESNOCANCEL, MB_YESNO, MB_RETRYCANCEL, MB_DEFBUTTON1, MB_DEFBUTTON2, MB_DEFBUTTON3, MB_SETFOREGROUND</p>
  <p><i>MsgBox - возвращаемые значения</i><br />
    IDOK, IDCANCEL, IDABORT, IDRETRY, IDIGNORE, IDYES, IDNO</p>
  <p><i>TShellFolderID</i><br />
    sfDesktop, sfStartMenu, sfPrograms, sfStartup, sfSendTo, sfFonts, sfAppData, sfDocs, sfTemplates, sfFavorites, sfLocalAppData</p>
  <p><i>Reg* - - значения корневых значений (RootKey values) (также см. <a href="topic_registrysection.htm">Секция [Registry]</a>)</i><br />
    HKEY_CLASSES_ROOT, HKEY_CLASSES_ROOT_32, HKEY_CLASSES_ROOT_64,<br />
    HKEY_CURRENT_USER, HKEY_CURRENT_USER_32, HKEY_CURRENT_USER_64,<br />
    HKEY_LOCAL_MACHINE, HKEY_LOCAL_MACHINE_32, HKEY_LOCAL_MACHINE_64,<br />
    HKEY_USERS, HKEY_USERS_32, HKEY_USERS_64,<br />
    HKEY_PERFORMANCE_DATA,<br />
    HKEY_CURRENT_CONFIG, HKEY_CURRENT_CONFIG_32, HKEY_CURRENT_CONFIG_64,<br />
    HKEY_DYN_DATA,<br />
    HKCR, HKCR32, HKCR64, HKCU, HKCU32, HKCU64, HKLM, HKLM32, HKLM64, HKU, HKU32, HKU64, HKCC, HKCC32, HKCC64</p>
  <p><i>TShouldProcessEntryResult</i><br />
    srNo, srYes, srUnknown</p>
  <p><i>TSetupMessageID</i><br />
    Используйте 'msg' + имя сообщения. Например: <i>SetupMessage(msgSetupAppTitle)</i></p>
  <p><i>Exec и ShellExec - значения ShowCmd</i><br />
    SW_SHOW, SW_SHOWNORMAL, SW_SHOWMAXIMIZED, SW_SHOWMINIMIZED, SW_SHOWMINNOACTIVE, SW_HIDE</p>
</div>
</body>
</html>
