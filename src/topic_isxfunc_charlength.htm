<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251" />
<meta http-equiv="X-UA-Compatible" content="IE=8" />
<title>Pascal Scripting: CharLength</title>
<link rel="stylesheet" type="text/css" href="styles.css" />
<script type="text/javascript" src="topic.js"></script>
</head>
<body>
<h1 class="topicheading">Pascal Scripting: CharLength</h1>
<div class="topicbody">
  <div><b>Прототип:</b></div>
  <p><tt>function CharLength(const S: String; const Index: Integer): Integer;</tt></p>
  <div><b>Описание:</b></div>
  <p>Возвращает длину в байтах (1 или 2) символа в указанной строке по указанному индексу.</p>
  <div><b>Комментарии:</b></div>
  <p>В наборах, использующих двухбайтовые символы (китайский, японский, корейский), большинство из не-ASCII символов занимают два байта. Обратите внимание, что второй байт двухбайтового символа может быть в диапазоне символов ASCII (до 128). Таким образом, при продвижении через строку необходимо соблюдать осторожность, чтобы не перепутать второй байт двухбайтового символа с однобайтовым ASCII символом.</p>
  <div><b>Пример:</b></div>
  <pre>function BackslashToSlash(const S: String): String;
var
  I: Integer;
begin
  Result := S;
  I := 1;
  while I &lt;= Length(Result) do
  begin
    if Result[I] = '\' then
      Result[I] := '/';
    // Go to the next character. But do not simply increment I by 1.
    // Increment by CharLength() in case Result[I] is a double-byte character.
    I := I + CharLength(Result, I);
  end;
end;

...

begin
  // Show path of Common Files with backslashes changed to forward slashes
  MsgBox(BackslashToSlash(ExpandConstant('{cf}')), mbInformation, MB_OK);
end;</pre>
</div>
</body>
</html>